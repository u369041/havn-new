// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  name       String?
  role       String     @default("USER")

  properties Property[]

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
}

model Property {
  id          String    @id @default(cuid())
  slug        String    @unique
  title       String

  /// IMPORTANT: map Prisma enum to the DB enum name weâ€™ll enforce ("PropertyStatus")
  status      Status    @default(DRAFT) @db.Enum("PropertyStatus")

  price       Int
  type        String
  bedrooms    Int?
  bathrooms   Int?
  address     String?
  latitude    Float?
  longitude   Float?
  description String?

  images      Image[]
  owner       User?     @relation(fields: [ownerId], references: [id])
  ownerId     String?

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  @@index([status])
  @@index([type])
  @@index([price])
}

model Image {
  id         String    @id @default(cuid())
  property   Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId String
  publicId   String?
  url        String?
  sortOrder  Int       @default(0)
  createdAt  DateTime  @default(now())

  @@index([propertyId])
  @@unique([propertyId, sortOrder])
}
